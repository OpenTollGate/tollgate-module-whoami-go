name: Build and Publish

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        target:
          - name: ath79
            goarch: mips
            gomips: softfloat
            model: gl-ar300m
          - name: glmt3000
            goarch: arm64
            model: gl-mt3000
          - name: glmt6000
            goarch: arm64
            model: gl-mt6000
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true
          cache-dependency-path: ./package/tollgate-module-whoami-go/src/go.sum

      - name: Build Binary
        run: |
          cd ./package/tollgate-module-whoami-go/src
          EXTRA_FLAGS=""
          if [ "${{ matrix.target.gomips }}" != "" ]; then
            EXTRA_FLAGS="GOMIPS=${{ matrix.target.gomips }}"
          fi
          env GOOS=linux GOARCH=${{ matrix.target.goarch }} $EXTRA_FLAGS \
            go build -o binary-${{ matrix.target.name }} -trimpath -ldflags="-s -w"

      - name: Upload Binary to Blossom
        id: upload_binary
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ./package/tollgate-module-whoami-go/src/binary-${{ matrix.target.name }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish Binary NIP-94 Metadata
        id: publish_binary
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload_binary.outputs.blossomUrl }}
          mimeType: application/octet-stream
          fileHash: ${{ steps.upload_binary.outputs.blossomHash }}
          originalHash: ${{ steps.upload_binary.outputs.blossomHash }}
          content: "TollGate Module Relay binary for ${{ matrix.target.name }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload_binary.outputs.size }}
          architecture: ${{ matrix.target.goarch }}

      - name: Verify Binary NIP-94 Event
        id: verify_binary
        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
        with:
          eventId: ${{ steps.publish_binary.outputs.eventId }}
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/

      - name: Check Binary Publication
        if: steps.verify_binary.outcome != 'success'
        run: |
          echo "❌ Failed to verify binary publication on relays"
          exit 1
          
      - name: Upload Binary Artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target.name }}
          path: ./package/tollgate-module-whoami-go/src/binary-${{ matrix.target.name }}
          retention-days: 5

  build-package:
    needs: build-binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [
          {name: "ath79", goarch: "mips", gomips: "softfloat", model: "gl-ar300m"},
          {name: "glmt3000", goarch: "arm64", model: "gl-mt3000"},
          {name: "glmt6000", goarch: "arm64", model: "gl-mt6000"}
        ]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: Build OpenWRT Package
        id: build_package
        uses: OpenTollGate/tollgate-sdk@add-all-go-modules
        with:
          packageName: 'tollgate-module-whoami-go'
          makeFilePath: './package/tollgate-module-whoami-go/Makefile'
          model: ${{ matrix.target.model }}

      - name: Debug output
        run: |
          echo "Attempting to list built package:"
          ls -R /tmp/openwrt-sdk/openwrt-sdk-*/bin/packages

      - name: Upload Package to Blossom
        id: upload_package
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ${{ steps.build_package.outputs.package_path }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish Package NIP-94 Metadata
        id: publish_package
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload_package.outputs.blossomUrl }}
          mimeType: application/x-opkg
          fileHash: ${{ steps.upload_package.outputs.blossomHash }}
          originalHash: ${{ steps.upload_package.outputs.blossomHash }}
          content: "TollGate Module Relay OpenWRT package for ${{ matrix.target.model }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload_package.outputs.size }}
          architecture: ${{ env.PLATFORM }}

      - name: Verify Package NIP-94 Event
        id: verify_package
        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
        with:
          eventId: ${{ steps.publish_package.outputs.eventId }}
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/

      - name: Check Package Publication
        if: steps.verify_package.outcome != 'success'
        run: |
          echo "❌ Failed to verify package publication on relays"
          exit 1

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.target.model }}
          path: ${{ steps.build_package.outputs.package_path }}
          retention-days: 5

      - name: Build Summary
        run: |
          echo "Build Summary for ${{ matrix.target.name }}:"
          echo "✅ Binary successfully built and published"
          echo "✅ Package successfully built and published"
          echo "Binary URL: ${{ steps.upload_binary.outputs.blossomUrl }}"
          echo "Package URL: ${{ steps.upload_package.outputs.blossomUrl }}"

  build-firmware:
    needs: build-package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - name: ath79
            model: gl-ar300m
          - name: glmt3000
            model: gl-mt3000
          - name: glmt6000
            model: gl-mt6000
      fail-fast: false

    name: Build Firmware ${{ matrix.target.model }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Checkout Image Builder
        uses: actions/checkout@v4
        with:
          repository: OpenTollGate/tollgate-os
          ref: main
          path: tollgate-os

      - name: Build OpenWRT Image
        id: build-openwrt-image
        uses: ./tollgate-os
        with:
          model: ${{ matrix.target.model }}
          nostr_secret_key: ${{ secrets.NSEC }}
          nostr_public_key: ${{ secrets.NPUB }}
          files_path: "./tollgate-os/files"
      
      - name: Upload Firmware to Blossom
        id: upload_firmware
        uses: c03rad0r/upload-blossom-action@pr/using-nsec-argument-correct-state
        with:
          host: "https://blossom.swissdash.site"
          filePath: ${{ steps.build-openwrt-image.outputs.firmware_path }}
          nostrPrivateKey: ${{ secrets.NSEC }}

      - name: Publish Firmware NIP-94 Metadata
        id: publish_firmware
        uses: OpenTollGate/nostr-publish-file-metadata-action/python@main
        with:
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/
          url: ${{ steps.upload_firmware.outputs.blossomUrl }}
          mimeType: application/octet-stream
          fileHash: ${{ steps.upload_firmware.outputs.blossomHash }}
          originalHash: ${{ steps.upload_firmware.outputs.blossomHash }}
          content: "TollGate OpenWRT Firmware for ${{ matrix.target.model }}"
          nsec: ${{ secrets.NSEC }}
          size: ${{ steps.upload_firmware.outputs.size }}
          architecture: ${{ matrix.target.name }}

      - name: Verify Firmware NIP-94 Event
        id: verify_firmware
        uses: OpenTollGate/nostr-publish-file-metadata-action/python/verify@main
        with:
          eventId: ${{ steps.publish_firmware.outputs.eventId }}
          relays: wss://relay.damus.io,wss://nos.lol,wss://nostr.mom/

      - name: Check Firmware Publication
        if: steps.verify_firmware.outcome != 'success'
        run: |
          echo "❌ Failed to verify firmware publication on relays"
          exit 1

      - name: Upload Firmware Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-${{ matrix.target.model }}
          path: ${{ steps.build-openwrt-image.outputs.firmware_path }}
          retention-days: 5
